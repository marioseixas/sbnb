name: Build sbnb
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/README*.md'
      - 'scripts/**'
      - 'containers/**'
      - 'images/**'
      - 'misc/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/README*.md'
      - 'scripts/**'
      - 'containers/**'
      - 'images/**'
      - 'misc/**'
  repository_dispatch:
    types: [ trigger-build ]
  workflow_dispatch:

permissions:
  contents: write
  pages:   write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Maximize Build Disk Space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-dotnet:         'true'
          remove-android:        'true'
          remove-haskell:        'true'
          remove-codeql:         'true'
          remove-docker-images:  'true'
          remove-large-packages: 'true'
          remove-cached-tools:   'true'
          remove-swapfile:       'false'

      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Output Run Info
        run: |
          echo "Run ID:       ${{ github.run_id }}"
          echo "Run Number:   ${{ github.run_number }}"
          echo "Run Attempt:  ${{ github.run_attempt }}"

      - name: Generate build id
        run: echo "IMAGE_VERSION=$(date +%Y.%m.%d)-$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            qemu-utils syslinux-utils mtools curl

      - name: Buildroot CCache
        uses: actions/cache@v4
        id: ccache
        with:
          path: ~/.buildroot-ccache
          key: buildroot-ccache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            buildroot-ccache-${{ runner.os }}-${{ github.ref_name }}-
            buildroot-ccache-${{ runner.os }}-

      - name: Buildroot output cache (slim)
        uses: actions/cache@v4
        id: output-cache
        with:
          path: |
            buildroot/output/host
            buildroot/output/staging
            buildroot/output/target
          key: buildroot-output-slim-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            buildroot-output-slim-${{ runner.os }}-${{ github.ref_name }}-
            buildroot-output-slim-${{ runner.os }}-

      - name: Configure Buildroot
        run: |
          cd buildroot
          make BR2_EXTERNAL=.. sbnb_defconfig

      - name: Check Disk Space Before Build
        run: df -h .

      - name: Run make
        run: |
          cd buildroot
          echo "Starting make process..."
          make HOST_DIR=$(pwd)/output/host -j "$(nproc)"
          echo "Make process finished."

      - name: Check Disk Space After Build
        run: df -h .

      - name: Free up disk space by removing build artifacts
        if: runner.os == 'Linux'
        run: |
          echo "Removing intermediate build directory..."
          rm -rf buildroot/output/build

      - name: Check Disk Space After Cleanup
        run: df -h .

      - name: Save sbnb images
        uses: actions/upload-artifact@v4
        with:
          name: sbnb-images-${{ env.IMAGE_VERSION }}
          path: |
            buildroot/output/images/sbnb.raw.zip
            buildroot/output/images/sbnb.vhd
